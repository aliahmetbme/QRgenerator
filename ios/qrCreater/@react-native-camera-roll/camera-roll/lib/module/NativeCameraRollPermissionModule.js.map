{"version":3,"names":["TurboModuleRegistry","get"],"sources":["NativeCameraRollPermissionModule.ts"],"sourcesContent":["import {TurboModuleRegistry, TurboModule} from 'react-native';\nimport type {Int32} from 'react-native/Libraries/Types/CodegenTypes';\n\ntype CameraRollAuthorizationStatus =\n  | 'granted'\n  | 'limited'\n  | 'denied'\n  | 'unavailable'\n  | 'blocked'\n  | 'not-determined';\n\nexport interface Spec extends TurboModule {\n  checkPermission(content: string): Promise<CameraRollAuthorizationStatus>;\n  requestReadWritePermission(): Promise<CameraRollAuthorizationStatus>;\n  requestAddOnlyPermission(): Promise<CameraRollAuthorizationStatus>;\n  refreshPhotoSelection(): Promise<boolean>;\n  addListener(eventName: string): void;\n  removeListeners(count: Int32): void;\n}\n\n// we call get here since on Android this module does not exist and it would throw\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport default TurboModuleRegistry.get<Spec>('RNCCameraRollPermission')!;\n"],"mappings":"AAAA,SAAQA,mBAAR,QAA+C,cAA/C;AAoBA;AACA;AACA,eAAeA,mBAAmB,CAACC,GAApB,CAA8B,yBAA9B,CAAf"}