{"version":3,"names":["NativeRNShare","Overlay","Sheet","Button","ShareSheet","checkPermissions","Social","ShareAsset","isAndroid","isIOS","normalizeShareOpenOptions","normalizeSingleShareOptions","RNShare","FACEBOOK","getConstants","Facebook","FACEBOOK_STORIES","FACEBOOKSTORIES","FacebookStories","PAGESMANAGER","Pagesmanager","TWITTER","Twitter","WHATSAPP","Whatsapp","WHATSAPPBUSINESS","Whatsappbusiness","INSTAGRAM","Instagram","INSTAGRAM_STORIES","INSTAGRAMSTORIES","InstagramStories","GOOGLEPLUS","Googleplus","EMAIL","Email","PINTEREST","Pinterest","LINKEDIN","Linkedin","SMS","Sms","TELEGRAM","Telegram","MESSENGER","Messenger","SNAPCHAT","Snapchat","VIBER","Viber","open","options","result","success","failOnCancel","Error","dismissedResult","dismissedAction","message","shareSingle","social","appId","Boolean","isPackageInstalled","packageName","isInstalled"],"sources":["index.tsx"],"sourcesContent":["import NativeRNShare from '../codegenSpec/NativeRNShare';\n\nimport Overlay from './components/Overlay';\nimport Sheet from './components/Sheet';\nimport Button from './components/Button';\nimport ShareSheet from './components/ShareSheet';\nimport checkPermissions from './helpers/checkPermissions';\nimport {\n  Social,\n  IsPackageInstalledResult,\n  ActivityType,\n  ShareAsset,\n  ShareOpenResult,\n  ShareOptions,\n  ShareSingleOptions,\n  ShareSingleResult,\n} from './types';\nimport { isAndroid, isIOS } from './helpers/platform';\nimport { normalizeShareOpenOptions, normalizeSingleShareOptions } from './helpers/options';\n\nconst RNShare = {\n  Button,\n  ShareSheet,\n  Overlay,\n  Sheet,\n\n  Social: {\n    FACEBOOK: NativeRNShare.getConstants().FACEBOOK || Social.Facebook,\n    FACEBOOK_STORIES: NativeRNShare.getConstants().FACEBOOKSTORIES || Social.FacebookStories,\n    PAGESMANAGER: NativeRNShare.getConstants().PAGESMANAGER || Social.Pagesmanager,\n    TWITTER: NativeRNShare.getConstants().TWITTER || Social.Twitter,\n    WHATSAPP: NativeRNShare.getConstants().WHATSAPP || Social.Whatsapp,\n    WHATSAPPBUSINESS: NativeRNShare.getConstants().WHATSAPPBUSINESS || Social.Whatsappbusiness,\n    INSTAGRAM: NativeRNShare.getConstants().INSTAGRAM || Social.Instagram,\n    INSTAGRAM_STORIES: NativeRNShare.getConstants().INSTAGRAMSTORIES || Social.InstagramStories,\n    GOOGLEPLUS: NativeRNShare.getConstants().GOOGLEPLUS || Social.Googleplus,\n    EMAIL: NativeRNShare.getConstants().EMAIL || Social.Email,\n    PINTEREST: NativeRNShare.getConstants().PINTEREST || Social.Pinterest,\n    LINKEDIN: NativeRNShare.getConstants().LINKEDIN || Social.Linkedin,\n    SMS: NativeRNShare.getConstants().SMS || Social.Sms,\n    TELEGRAM: NativeRNShare.getConstants().TELEGRAM || Social.Telegram,\n    MESSENGER: NativeRNShare.getConstants().MESSENGER || Social.Messenger,\n    SNAPCHAT: NativeRNShare.getConstants().SNAPCHAT || Social.Snapchat,\n    VIBER: NativeRNShare.getConstants().VIBER || Social.Viber,\n  },\n\n  async open(options: ShareOptions) {\n    await checkPermissions(options);\n\n    options = normalizeShareOpenOptions(options);\n\n    const result: ShareOpenResult = await NativeRNShare.open(options);\n\n    if (!result.success) {\n      if (options.failOnCancel) {\n        throw new Error('User did not share');\n      }\n\n      const dismissedResult: ShareOpenResult = {\n        dismissedAction: true,\n        success: result.success,\n        message: result.message,\n      };\n      return dismissedResult;\n    }\n\n    return result;\n  },\n\n  async shareSingle(options: ShareSingleOptions) {\n    if (!isAndroid() && !isIOS()) throw new Error('Not implemented');\n\n    if (options.social === RNShare.Social.INSTAGRAM_STORIES && !options.appId) {\n      throw new Error('To share to Instagram Stories you need to provide appId');\n    }\n\n    await checkPermissions(options);\n\n    options = normalizeSingleShareOptions(options);\n\n    const { success, message } = await NativeRNShare.shareSingle(options);\n\n    const result: ShareSingleResult = {\n      success: Boolean(success),\n      message,\n    };\n\n    return result;\n  },\n\n  async isPackageInstalled(packageName: string) {\n    if (!isAndroid()) throw new Error('Not implemented');\n\n    const isInstalled = await NativeRNShare.isPackageInstalled(packageName);\n\n    const result: IsPackageInstalledResult = {\n      isInstalled,\n      message: 'Package is Installed',\n    };\n\n    return result;\n  },\n} as const;\n\nexport { Overlay, Sheet, Button, ShareSheet, ShareAsset, Social };\nexport type { ShareSingleOptions, ShareOptions, ActivityType, IsPackageInstalledResult };\nexport type { OverlayProps } from './components/Overlay';\nexport type { SheetProps } from './components/Sheet';\nexport type { ButtonProps } from './components/Button';\nexport type { ShareSheetProps } from './components/ShareSheet';\nexport default RNShare;\n"],"mappings":"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"}