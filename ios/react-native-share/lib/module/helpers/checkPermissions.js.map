{"version":3,"names":["checkAndroidPermissionsForUrls","isAndroid","checkPermissions","_ref","url","urls","normalizedUrls"],"sources":["checkPermissions.ts"],"sourcesContent":["import { ShareOptions } from '../types';\nimport { checkAndroidPermissionsForUrls } from './android';\nimport { isAndroid } from './platform';\n\n/** Check if the passed in options require platform permission. If an error isn't thrown, no permission is required */\nexport default async function checkPermissions({ url, urls }: Pick<ShareOptions, 'url' | 'urls'>) {\n  if (isAndroid()) {\n    if (url || urls) {\n      const normalizedUrls = urls ?? (url ? [url] : []);\n      await checkAndroidPermissionsForUrls(normalizedUrls);\n    }\n  }\n}\n"],"mappings":"AACA,SAASA,8BAA8B,QAAQ,WAAW;AAC1D,SAASC,SAAS,QAAQ,YAAY;;AAEtC;AACA,eAAe,eAAeC,gBAAgBA,CAAAC,IAAA,EAAoD;EAAA,IAAnD;IAAEC,GAAG;IAAEC;EAAyC,CAAC,GAAAF,IAAA;EAC9F,IAAIF,SAAS,CAAC,CAAC,EAAE;IACf,IAAIG,GAAG,IAAIC,IAAI,EAAE;MACf,MAAMC,cAAc,GAAGD,IAAI,KAAKD,GAAG,GAAG,CAACA,GAAG,CAAC,GAAG,EAAE,CAAC;MACjD,MAAMJ,8BAA8B,CAACM,cAAc,CAAC;IACtD;EACF;AACF"}