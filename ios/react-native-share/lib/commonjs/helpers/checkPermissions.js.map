{"version":3,"names":["_android","require","_platform","checkPermissions","_ref","url","urls","isAndroid","normalizedUrls","checkAndroidPermissionsForUrls"],"sources":["checkPermissions.ts"],"sourcesContent":["import { ShareOptions } from '../types';\nimport { checkAndroidPermissionsForUrls } from './android';\nimport { isAndroid } from './platform';\n\n/** Check if the passed in options require platform permission. If an error isn't thrown, no permission is required */\nexport default async function checkPermissions({ url, urls }: Pick<ShareOptions, 'url' | 'urls'>) {\n  if (isAndroid()) {\n    if (url || urls) {\n      const normalizedUrls = urls ?? (url ? [url] : []);\n      await checkAndroidPermissionsForUrls(normalizedUrls);\n    }\n  }\n}\n"],"mappings":";;;;;;AACA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,SAAA,GAAAD,OAAA;AAEA;AACe,eAAeE,gBAAgBA,CAAAC,IAAA,EAAoD;EAAA,IAAnD;IAAEC,GAAG;IAAEC;EAAyC,CAAC,GAAAF,IAAA;EAC9F,IAAI,IAAAG,mBAAS,EAAC,CAAC,EAAE;IACf,IAAIF,GAAG,IAAIC,IAAI,EAAE;MACf,MAAME,cAAc,GAAGF,IAAI,KAAKD,GAAG,GAAG,CAACA,GAAG,CAAC,GAAG,EAAE,CAAC;MACjD,MAAM,IAAAI,uCAA8B,EAACD,cAAc,CAAC;IACtD;EACF;AACF"}